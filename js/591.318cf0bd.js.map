{"version":3,"file":"js/591.318cf0bd.js","mappings":"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","sources":["webpack://cr/./src/api/app.js"],"sourcesContent":["// import enablePeriod from \"@/api/enable-period.json\"; // 後端完成後可刪\n// import user from \"@/api/user-data.json\"; // 後端完成後可刪\n\n//加async、useraccount\nexport async function getUserPeriodData() { // 獲取user的借用資料\n    // 可修改區 start\n\n    const account = localStorage.getItem('loggedInAccount');\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getUserPeriodData', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ userAccount: account }),\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n\n        const data = await response.json();\n        // 将对象的值转换为数组\n        const dataArray = Object.values(data);\n        //console.log(\"dataArray\",data);\n        const updatedData = await Promise.all(dataArray.map(async(item) => {\n            var start = item.period.startPeriod;\n            var end = item.period.endPeriod;\n\n            const daystart = new Date(start);\n            const dateend = new Date(end);\n            // console.log(\"分鐘\" + dateend.getMinutes())\n            var n = 0;\n            if (dateend.getMinutes() == 55) {\n                n = 9;\n            } else {\n                n = dateend.getHours() - 8;\n\n            }\n            // 創建新的 period 物件\n            const newPeriod = {\n                \"day\": daystart.getDay(), // 星期幾，這裡是示範值，根據實際情況調整\n                \"startPeriod\": daystart.getHours() - 7, // 開始時間\n                \"endPeriod\": n // 結束時間\n            };\n            console.log(dateend.getMinutes())\n                // 將新的 period 物件替換原來的 period\n            item.period = newPeriod;\n            return item;\n        }));\n\n        console.log(\"getUserPeriodData\", updatedData);\n\n        // 回傳處理後的 JSON 物件\n        return updatedData;\n\n\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n\n    // return user.periodData;\n    // 可修改區 end\n}\n\n\n\nexport async function getAllUserPeriodData() {\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getAllUserPeriodData', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n\n        const data = await response.json();\n        // 将对象的值转换为数组\n        const dataArray = Object.values(data);\n        //console.log(\"dataArray\",data);\n        const updatedData = dataArray.map((item) => {\n            var start = item.period.startPeriod;\n            var end = item.period.endPeriod;\n\n            const daystart = new Date(start);\n            const dateend = new Date(end);\n            // console.log(\"分鐘\" + dateend.getMinutes())\n            var n = 0;\n            if (dateend.getMinutes() == 55) {\n                n = 9;\n            } else {\n                n = dateend.getHours() - 8;\n\n            }\n            // 創建新的 period 物件\n            const newPeriod = {\n                \"day\": daystart.getDay(), // 星期幾，這裡是示範值，根據實際情況調整\n                \"startPeriod\": daystart.getHours() - 7, // 開始時間\n                \"endPeriod\": n // 結束時間\n            };\n            console.log(dateend.getMinutes())\n                // 將新的 period 物件替換原來的 period\n            item.period = newPeriod;\n            return item;\n        });\n\n        console.log(updatedData);\n\n        // 回傳處理後的 JSON 物件\n        return updatedData;\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\n\nexport async function getEnablePeriodData(classroomID) {\n    const response = await fetch('https://qiuye.mooo.com/api/app/getEnablePeriodData', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n\n        },\n        credentials: 'include',\n        body: JSON.stringify({ classroomID }),\n    });\n\n    if (!response.ok) {\n        throw new Error('请求失败');\n    }\n\n    const data = await response.json();\n    return data;\n}\n\n\nexport async function setEnablePeriod(classroomID, enablePeriod) {\n    try {\n        const apiUrl = `https://qiuye.mooo.com/api/app/setEnablePeriod`; // 根据实际后端 API 地址修改\n\n        const response = await fetch(apiUrl, {\n            method: 'POST', // 根据你的 API 需求，可能是 'POST' 或 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ classroomID, enablePeriod }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        // 返回响应的数据，如果有的话\n        return response.json();\n    } catch (error) {\n        console.error('Error during setEnablePeriod:', error);\n        throw error;\n    }\n}\n\n\n\n//加async\nexport async function getAllEnablePeriodData() { // 跟後端拿全部教室的可借時段\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getAllEnablePeriodData', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n\n        const data = await response.json();\n        console.log(data)\n        return data;\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n/*\n  return:\n    請參照 enable-period.json\n*/\n\n\n// function convertToTimeString(day, startPeriod, endPeriod) {\n\n//     // 基准日期为2024年1月1日星期五\n//     const baseDate = new Date(2024, 0, 1); // 月份从0开始，所以0代表1月\n//     const currentDate = new Date();\n\n//     const daysDifference = getDaysDifference(currentDate, baseDate); // 计算相对于基准日期的天数\n//     const todayday = ((daysDifference - 1) % 7) + 1; //算出今天星期幾\n\n//     const startDateTime = new Date();\n//     const endDateTime = new Date();\n\n//     if (todayday < day) {\n//         startDateTime.setDate(currentDate.getDate() + day - todayday);\n//         endDateTime.setDate(currentDate.getDate() + day - todayday);\n//     } else {\n//         startDateTime.setDate(currentDate.getDate() + 7 - todayday + day);\n//         endDateTime.setDate(currentDate.getDate() + 7 - todayday + day);\n//     }\n\n//     if (startPeriod === 1) startDateTime.setHours(8, 20, 0, 0);\n//     else if (startPeriod === 2) startDateTime.setHours(9, 20, 0, 0);\n//     else if (startPeriod === 3) startDateTime.setHours(10, 20, 0, 0);\n//     else if (startPeriod === 4) startDateTime.setHours(11, 15, 0, 0);\n//     else if (startPeriod === 5) startDateTime.setHours(12, 10, 0, 0);\n//     else if (startPeriod === 6) startDateTime.setHours(13, 10, 0, 0);\n//     else if (startPeriod === 7) startDateTime.setHours(14, 10, 0, 0);\n//     else if (startPeriod === 8) startDateTime.setHours(15, 10, 0, 0);\n//     else if (startPeriod === 9) startDateTime.setHours(16, 5, 0, 0);\n\n//     if (endDateTime === 1) endDateTime.setHours(9, 10, 0, 0);\n//     else if (endPeriod === 2) endDateTime.setHours(10, 10, 0, 0);\n//     else if (endPeriod === 3) endDateTime.setHours(11, 10, 0, 0);\n//     else if (endPeriod === 4) endDateTime.setHours(12, 5, 0, 0);\n//     else if (endPeriod === 5) endDateTime.setHours(13, 0, 0, 0);\n//     else if (endPeriod === 6) endDateTime.setHours(14, 0, 0, 0);\n//     else if (endPeriod === 7) endDateTime.setHours(15, 0, 0, 0);\n//     else if (endPeriod === 8) endDateTime.setHours(16, 0, 0, 0);\n//     else if (endPeriod === 9) endDateTime.setHours(16, 55, 0, 0);\n\n//     const result = {\n//         startPeriod: startDateTime.toISOString(),\n//         endPeriod: endDateTime.toISOString()\n//     }\n\n//     return result;\n\n// }\n\n// function getDaysDifference(date1, date2) {\n//     // 获取两个日期的时间戳（毫秒数）\n//     const time1 = date1.getTime();\n//     const time2 = date2.getTime();\n\n//     // 计算毫秒数差异\n//     const timeDiff = Math.abs(time2 - time1);\n\n//     // 计算天数差异\n//     const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n\n//     return daysDiff;\n// }\n\n// 示例\n\n// const result = convertToTimeString(3, 2, 3);  // 星期三，第2到第3节课\n// console.log(result);\n\n\n\nfunction convertToTimeString(day, startPeriod, endPeriod) {\n    var baseDate = new Date();\n    baseDate.setHours(0, 0, 0, 0);\n    const currentDayOfWeek = baseDate.getDay();\n    const daysUntilMonday = currentDayOfWeek === 0 ? 6 : currentDayOfWeek - 1;\n    const currentMonday = new Date(baseDate);\n    currentMonday.setDate(baseDate.getDate() - daysUntilMonday);\n    baseDate = new Date(baseDate);\n\n    if (currentDayOfWeek == 6 || currentDayOfWeek == 7) {\n        baseDate.setDate(currentMonday.getDate() + day + 6);\n    } else baseDate.setDate(currentMonday.getDate() + day - 1);\n    // 计算给定 day、startPeriod 和 endPeriod 对应的时间\n    const startDateTime = new Date(baseDate);\n    if (startPeriod === 1) startDateTime.setHours(8, 20, 0, 0);\n    else if (startPeriod === 2) startDateTime.setHours(9, 20, 0, 0);\n    else if (startPeriod === 3) startDateTime.setHours(10, 20, 0, 0);\n    else if (startPeriod === 4) startDateTime.setHours(11, 15, 0, 0);\n    else if (startPeriod === 5) startDateTime.setHours(12, 10, 0, 0);\n    else if (startPeriod === 6) startDateTime.setHours(13, 10, 0, 0);\n    else if (startPeriod === 7) startDateTime.setHours(14, 10, 0, 0);\n    else if (startPeriod === 8) startDateTime.setHours(15, 10, 0, 0);\n    else if (startPeriod === 9) {\n        startDateTime.setHours(16, 5, 0, 0);\n    }\n\n    const endDateTime = new Date(baseDate);\n\n    if (endDateTime === 1) endDateTime.setHours(9, 10, 0, 0);\n    else if (endPeriod === 2) endDateTime.setHours(10, 10, 0, 0);\n    else if (endPeriod === 3) endDateTime.setHours(11, 10, 0, 0);\n    else if (endPeriod === 4) endDateTime.setHours(12, 5, 0, 0);\n    else if (endPeriod === 5) endDateTime.setHours(13, 0, 0, 0);\n    else if (endPeriod === 6) endDateTime.setHours(14, 0, 0, 0);\n    else if (endPeriod === 7) endDateTime.setHours(15, 0, 0, 0);\n    else if (endPeriod === 8) endDateTime.setHours(16, 0, 0, 0);\n    else if (endPeriod === 9) {\n        endDateTime.setHours(16, 55, 0, 0);\n    }\n    return {\n        startPeriod: startDateTime.toJSON(),\n        endPeriod: endDateTime.toJSON()\n    };\n}\n\n\n// 举例：星期三（day: 3），第 4 節（startPeriod: 4），第 5 節（endPeriod: 5）\n\n\nexport async function sendApply(classroomID, selectedPeriod) {\n    // console.log(selectedPeriod.day, selectedPeriod.startPeriod, selectedPeriod.endPeriod)\n    const result = convertToTimeString(selectedPeriod.day, selectedPeriod.startPeriod, selectedPeriod.endPeriod);\n    const apiUrl = 'https://qiuye.mooo.com/api/app/sendApply';\n    const account = localStorage.getItem('loggedInAccount');\n    selectedPeriod = result;\n    console.log(selectedPeriod);\n    try {\n        const response = await fetch(apiUrl, {\n            method: 'POST', // 或者 'PUT'，取決於你的後端接口\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ classroomID: classroomID, selectedPeriod: selectedPeriod, userAccount: account })\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        console.log(data.code)\n        if (data.code == \"200\") return 200;\n        else if (data.code == \"400\") return 400;\n    } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n        throw error;\n    }\n}\n/*\n  input:\n    classroomID: <string>教室ID\n    selectedPeriod: { day: <int>星期幾, startPeriod: <int>開始節數, endPeriod: <int>結束節數 }\n  userAccount: <string>\n  \n  return:\n    if 申請成功 -> return 200\n    if 申請失敗 -> return 400\n*/\n\nexport async function cancelApply(pid) {\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/cancelApply`, {\n            method: 'POST', // 假设取消申请是一个DELETE请求\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`取消申请失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('取消申请成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('取消申请时发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function deletePeriodData(pid) { // 刪除特定狀態的借用紀錄 (user) ( ex: 申請被拒絕 / 借用完畢(已還鑰匙) / 已取消申請 )\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/deletePeriodData`, {\n            method: 'POST', // 假设刪除申请是一个DELETE请求\n            headers: {\n                'Content-Type': 'application/json',\n                'Origin': 'Origin',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`取消申请失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('刪除申請成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('刪除申請时发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function LendKey(pid) { // 借出鑰匙 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/LendKey`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Origin': 'Origin',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`借出鑰匙失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('借出鑰匙成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('借出鑰匙时发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function ReceiveKey(pid) { // 收到歸還的鑰匙 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/ReceiveKey`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Origin': 'Origin',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`歸還鑰匙失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('歸還鑰匙成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('歸還鑰匙发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function acceptRequest(pid) { // 接受一個時段申請 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/acceptRequest`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ pid }),\n            credentials: 'include',\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`接受時段申請失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('接受時段申請成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('接受時段申請发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function rejectRequest(pid) { // 拒絕一個時段申請 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/rejectRequest`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`拒絕時段申請失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('拒絕時段申請成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('拒絕時段申請发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function getAllUserPoint() { // 獲取所有的user的計點狀況 (admin)\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getAllUserPoint', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({}),\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n        throw error;\n    }\n}\n\nexport async function getUserPoint(userAccount) { // 獲取user的記點狀況 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getUserPoint', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ account: userAccount }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n        throw error;\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    account: <string>學號(帳號)\n  \n  return:\n    <int>違規點數\n*/\n//async\nexport async function setUserPoint(account, point) {\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/setUserPoint', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ account, point }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`请求失败，状态码: ${response.status}`);\n        }\n\n        return 200;\n    } catch (error) {\n        console.error('设置用户计分数据失败', error.message || error);\n        throw error;\n    }\n}\n\n/*\n  input:\n    account: <string>學號(帳號)\n    point: <int>違規點數\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function setUserBanState(account, state) {\n    // 可修改區 start\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/setUserBanState', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ account, state }),\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n\n        return response.status;\n    } catch (error) {\n        console.error('设置用户计分数据失败', error);\n        throw error;\n    }\n    // 可修改區 end\n}"],"names":["async","getUserPeriodData","account","localStorage","getItem","response","fetch","method","headers","credentials","body","JSON","stringify","userAccount","ok","Error","data","json","dataArray","Object","values","updatedData","Promise","all","map","start","item","period","startPeriod","end","endPeriod","daystart","Date","dateend","n","getMinutes","getHours","newPeriod","getDay","console","log","error","getAllUserPeriodData","getEnablePeriodData","classroomID","setEnablePeriod","enablePeriod","apiUrl","status","getAllEnablePeriodData","convertToTimeString","day","baseDate","setHours","currentDayOfWeek","daysUntilMonday","currentMonday","setDate","getDate","startDateTime","endDateTime","toJSON","sendApply","selectedPeriod","result","code","cancelApply","pid","message","deletePeriodData","LendKey","ReceiveKey","acceptRequest","rejectRequest","getAllUserPoint","getUserPoint","setUserPoint","point","setUserBanState","state"],"sourceRoot":""}