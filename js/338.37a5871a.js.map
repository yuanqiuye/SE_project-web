{"version":3,"file":"js/338.37a5871a.js","mappings":"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","sources":["webpack://cr/./src/api/app.js","webpack://cr/./src/api/save.js","webpack://cr/./src/assets/import.js","webpack://cr/./src/components/user/other/SaveButton.vue","webpack://cr/./src/components/user/other/SaveButton.vue?47f4"],"sourcesContent":["// import enablePeriod from \"@/api/enable-period.json\"; // 後端完成後可刪\n// import user from \"@/api/user-data.json\"; // 後端完成後可刪\n\n//加async、useraccount\nexport async function getUserPeriodData() { // 獲取user的借用資料\n    // 可修改區 start\n\n    const account = localStorage.getItem('loggedInAccount');\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getUserPeriodData', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ userAccount: account }),\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n\n        const data = await response.json();\n        // 将对象的值转换为数组\n        const dataArray = Object.values(data);\n        //console.log(\"dataArray\",data);\n        const updatedData = await Promise.all(dataArray.map(async(item) => {\n            var start = item.period.startPeriod;\n            var end = item.period.endPeriod;\n\n            const daystart = new Date(start);\n            const dateend = new Date(end);\n\n            // 創建新的 period 物件\n            const newPeriod = {\n                \"day\": daystart.getDay(), // 星期幾，這裡是示範值，根據實際情況調整\n                \"startPeriod\": daystart.getHours() - 7, // 開始時間\n                \"endPeriod\": dateend.getHours() - 8 // 結束時間\n            };\n\n            // 將新的 period 物件替換原來的 period\n            item.period = newPeriod;\n            return item;\n        }));\n\n        console.log(\"getUserPeriodData\", updatedData);\n\n        // 回傳處理後的 JSON 物件\n        return updatedData;\n\n\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n\n    // return user.periodData;\n    // 可修改區 end\n}\n\n\n\nexport async function getAllUserPeriodData() {\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getAllUserPeriodData', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n\n        const data = await response.json();\n        // 将对象的值转换为数组\n        const dataArray = Object.values(data);\n        //console.log(\"dataArray\",data);\n        const updatedData = dataArray.map((item) => {\n            var start = item.period.startPeriod;\n            var end = item.period.endPeriod;\n\n            const daystart = new Date(start);\n            const dateend = new Date(end);\n\n            // 創建新的 period 物件\n            const newPeriod = {\n                \"day\": daystart.getDay(), // 星期幾，這裡是示範值，根據實際情況調整\n                \"startPeriod\": daystart.getHours() - 7, // 開始時間\n                \"endPeriod\": dateend.getHours() - 8 // 結束時間\n            };\n\n            // 將新的 period 物件替換原來的 period\n            item.period = newPeriod;\n            return item;\n        });\n\n        console.log(updatedData);\n\n        // 回傳處理後的 JSON 物件\n        return updatedData;\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n\n\nexport async function getEnablePeriodData(classroomID) {\n    const response = await fetch('https://qiuye.mooo.com/api/app/getEnablePeriodData', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n\n        },\n        credentials: 'include',\n        body: JSON.stringify({ classroomID }),\n    });\n\n    if (!response.ok) {\n        throw new Error('请求失败');\n    }\n\n    const data = await response.json();\n    return data;\n}\n\n\nexport async function setEnablePeriod(classroomID, enablePeriod) {\n    try {\n        const apiUrl = `https://qiuye.mooo.com/api/app/setEnablePeriod`; // 根据实际后端 API 地址修改\n\n        const response = await fetch(apiUrl, {\n            method: 'POST', // 根据你的 API 需求，可能是 'POST' 或 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ classroomID, enablePeriod }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        // 返回响应的数据，如果有的话\n        return response.json();\n    } catch (error) {\n        console.error('Error during setEnablePeriod:', error);\n        throw error;\n    }\n}\n\n\n\n//加async\nexport async function getAllEnablePeriodData() { // 跟後端拿全部教室的可借時段\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getAllEnablePeriodData', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n\n        const data = await response.json();\n        console.log(data)\n        return data;\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n}\n/*\n  return:\n    請參照 enable-period.json\n*/\n\n\n// function convertToTimeString(day, startPeriod, endPeriod) {\n\n//     // 基准日期为2024年1月1日星期五\n//     const baseDate = new Date(2024, 0, 1); // 月份从0开始，所以0代表1月\n//     const currentDate = new Date();\n\n//     const daysDifference = getDaysDifference(currentDate, baseDate); // 计算相对于基准日期的天数\n//     const todayday = ((daysDifference - 1) % 7) + 1; //算出今天星期幾\n\n//     const startDateTime = new Date();\n//     const endDateTime = new Date();\n\n//     if (todayday < day) {\n//         startDateTime.setDate(currentDate.getDate() + day - todayday);\n//         endDateTime.setDate(currentDate.getDate() + day - todayday);\n//     } else {\n//         startDateTime.setDate(currentDate.getDate() + 7 - todayday + day);\n//         endDateTime.setDate(currentDate.getDate() + 7 - todayday + day);\n//     }\n\n//     if (startPeriod === 1) startDateTime.setHours(8, 20, 0, 0);\n//     else if (startPeriod === 2) startDateTime.setHours(9, 20, 0, 0);\n//     else if (startPeriod === 3) startDateTime.setHours(10, 20, 0, 0);\n//     else if (startPeriod === 4) startDateTime.setHours(11, 15, 0, 0);\n//     else if (startPeriod === 5) startDateTime.setHours(12, 10, 0, 0);\n//     else if (startPeriod === 6) startDateTime.setHours(13, 10, 0, 0);\n//     else if (startPeriod === 7) startDateTime.setHours(14, 10, 0, 0);\n//     else if (startPeriod === 8) startDateTime.setHours(15, 10, 0, 0);\n//     else if (startPeriod === 9) startDateTime.setHours(16, 5, 0, 0);\n\n//     if (endDateTime === 1) endDateTime.setHours(9, 10, 0, 0);\n//     else if (endPeriod === 2) endDateTime.setHours(10, 10, 0, 0);\n//     else if (endPeriod === 3) endDateTime.setHours(11, 10, 0, 0);\n//     else if (endPeriod === 4) endDateTime.setHours(12, 5, 0, 0);\n//     else if (endPeriod === 5) endDateTime.setHours(13, 0, 0, 0);\n//     else if (endPeriod === 6) endDateTime.setHours(14, 0, 0, 0);\n//     else if (endPeriod === 7) endDateTime.setHours(15, 0, 0, 0);\n//     else if (endPeriod === 8) endDateTime.setHours(16, 0, 0, 0);\n//     else if (endPeriod === 9) endDateTime.setHours(16, 55, 0, 0);\n\n//     const result = {\n//         startPeriod: startDateTime.toISOString(),\n//         endPeriod: endDateTime.toISOString()\n//     }\n\n//     return result;\n\n// }\n\n// function getDaysDifference(date1, date2) {\n//     // 获取两个日期的时间戳（毫秒数）\n//     const time1 = date1.getTime();\n//     const time2 = date2.getTime();\n\n//     // 计算毫秒数差异\n//     const timeDiff = Math.abs(time2 - time1);\n\n//     // 计算天数差异\n//     const daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n\n//     return daysDiff;\n// }\n\n// 示例\n\n// const result = convertToTimeString(3, 2, 3);  // 星期三，第2到第3节课\n// console.log(result);\n\n\n\nfunction convertToTimeString(day, startPeriod, endPeriod) {\n    var baseDate = new Date();\n    baseDate.setHours(0, 0, 0, 0);\n    const currentDayOfWeek = baseDate.getDay();\n    const daysUntilMonday = currentDayOfWeek === 0 ? 6 : currentDayOfWeek - 1;\n    const currentMonday = new Date(baseDate);\n    currentMonday.setDate(baseDate.getDate() - daysUntilMonday);\n    baseDate = new Date(baseDate);\n\n    if (currentDayOfWeek == 6 || currentDayOfWeek == 7) {\n        baseDate.setDate(currentMonday.getDate() + day + 6);\n    } else baseDate.setDate(currentMonday.getDate() + day - 1);\n    // 计算给定 day、startPeriod 和 endPeriod 对应的时间\n    const startDateTime = new Date(baseDate);\n    if (startPeriod === 1) startDateTime.setHours(8, 20, 0, 0);\n    else if (startPeriod === 2) startDateTime.setHours(9, 20, 0, 0);\n    else if (startPeriod === 3) startDateTime.setHours(10, 20, 0, 0);\n    else if (startPeriod === 4) startDateTime.setHours(11, 15, 0, 0);\n    else if (startPeriod === 5) startDateTime.setHours(12, 10, 0, 0);\n    else if (startPeriod === 6) startDateTime.setHours(13, 10, 0, 0);\n    else if (startPeriod === 7) startDateTime.setHours(14, 10, 0, 0);\n    else if (startPeriod === 8) startDateTime.setHours(15, 10, 0, 0);\n    else if (startPeriod === 9) {\n        startDateTime.setHours(16, 5, 0, 0);\n    }\n\n    const endDateTime = new Date(baseDate);\n\n    if (endDateTime === 1) endDateTime.setHours(9, 10, 0, 0);\n    else if (endPeriod === 2) endDateTime.setHours(10, 10, 0, 0);\n    else if (endPeriod === 3) endDateTime.setHours(11, 10, 0, 0);\n    else if (endPeriod === 4) endDateTime.setHours(12, 5, 0, 0);\n    else if (endPeriod === 5) endDateTime.setHours(13, 0, 0, 0);\n    else if (endPeriod === 6) endDateTime.setHours(14, 0, 0, 0);\n    else if (endPeriod === 7) endDateTime.setHours(15, 0, 0, 0);\n    else if (endPeriod === 8) endDateTime.setHours(16, 0, 0, 0);\n    else if (endPeriod === 9) {\n        endDateTime.setHours(16, 55, 0, 0);\n    }\n    return {\n        startPeriod: startDateTime.toJSON(),\n        endPeriod: endDateTime.toJSON()\n    };\n}\n\n\n// 举例：星期三（day: 3），第 4 節（startPeriod: 4），第 5 節（endPeriod: 5）\n\n\nexport async function sendApply(classroomID, selectedPeriod) {\n    // console.log(selectedPeriod.day, selectedPeriod.startPeriod, selectedPeriod.endPeriod)\n    const result = convertToTimeString(selectedPeriod.day, selectedPeriod.startPeriod, selectedPeriod.endPeriod);\n    const apiUrl = 'https://qiuye.mooo.com/api/app/sendApply';\n    const account = localStorage.getItem('loggedInAccount');\n    selectedPeriod = result;\n    console.log(selectedPeriod);\n    try {\n        const response = await fetch(apiUrl, {\n            method: 'POST', // 或者 'PUT'，取決於你的後端接口\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ classroomID: classroomID, selectedPeriod: selectedPeriod, userAccount: account })\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        console.log(data.code)\n        if (data.code == \"200\") return 200;\n        else if (data.code == \"400\") return 400;\n    } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n        throw error;\n    }\n}\n/*\n  input:\n    classroomID: <string>教室ID\n    selectedPeriod: { day: <int>星期幾, startPeriod: <int>開始節數, endPeriod: <int>結束節數 }\n  userAccount: <string>\n  \n  return:\n    if 申請成功 -> return 200\n    if 申請失敗 -> return 400\n*/\n\nexport async function cancelApply(pid) {\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/cancelApply`, {\n            method: 'POST', // 假设取消申请是一个DELETE请求\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`取消申请失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('取消申请成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('取消申请时发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function deletePeriodData(pid) { // 刪除特定狀態的借用紀錄 (user) ( ex: 申請被拒絕 / 借用完畢(已還鑰匙) / 已取消申請 )\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/deletePeriodData`, {\n            method: 'POST', // 假设刪除申请是一个DELETE请求\n            headers: {\n                'Content-Type': 'application/json',\n                'Origin': 'Origin',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`取消申请失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('刪除申請成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('刪除申請时发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function LendKey(pid) { // 借出鑰匙 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/LendKey`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Origin': 'Origin',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`借出鑰匙失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('借出鑰匙成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('借出鑰匙时发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function ReceiveKey(pid) { // 收到歸還的鑰匙 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/ReceiveKey`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Origin': 'Origin',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`歸還鑰匙失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('歸還鑰匙成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('歸還鑰匙发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function acceptRequest(pid) { // 接受一個時段申請 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/acceptRequest`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ pid }),\n            credentials: 'include',\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`接受時段申請失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('接受時段申請成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('接受時段申請发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function rejectRequest(pid) { // 拒絕一個時段申請 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch(`https://qiuye.mooo.com/api/app/rejectRequest`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ pid }),\n        });\n\n        if (!response.ok) {\n            // 网络请求失败\n            throw new Error(`拒絕時段申請失败，状态码：${response.status}`);\n        }\n\n        const data = await response.json(); // 假设响应包含JSON数据\n        console.log('拒絕時段申請成功', data);\n        return 200; // 返回成功状态码\n    } catch (error) {\n        console.error('拒絕時段申請发生错误', error.message);\n        return 400; // 返回失败状态码\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    pid: <string>時段ID (唯一性)\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function getAllUserPoint() { // 獲取所有的user的計點狀況 (admin)\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getAllUserPoint', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({}),\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n        throw error;\n    }\n}\n\nexport async function getUserPoint(userAccount) { // 獲取user的記點狀況 (admin)\n    // 可修改區 start\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getUserPoint', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ account: userAccount }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n        throw error;\n    }\n    // 可修改區 end\n}\n/*\n  input:\n    account: <string>學號(帳號)\n  \n  return:\n    <int>違規點數\n*/\n//async\nexport async function setUserPoint(account, point) {\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/setUserPoint', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ account, point }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`请求失败，状态码: ${response.status}`);\n        }\n\n        return 200;\n    } catch (error) {\n        console.error('设置用户计分数据失败', error.message || error);\n        throw error;\n    }\n}\n\n/*\n  input:\n    account: <string>學號(帳號)\n    point: <int>違規點數\n  \n  return:\n    if 成功 -> return 200\n    if 失敗 -> return 400\n*/\n\nexport async function setUserBanState(account, state) {\n    // 可修改區 start\n    try {\n        const response = await fetch('https://qiuye.mooo.com/api/app/setUserBanState', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include',\n            body: JSON.stringify({ account, state }),\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n\n        return response.status;\n    } catch (error) {\n        console.error('设置用户计分数据失败', error);\n        throw error;\n    }\n    // 可修改區 end\n}","export async function getIsSave(classroomID) {\n    var account = localStorage.getItem('loggedInAccount').toString();\n    if (classroomID != null) {\n        const response = await fetch('https://qiuye.mooo.com/api/app/getIsSave', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'include', // 添加这一行以携带凭据\n            body: JSON.stringify({\n                userAccount: account,\n                classroomID: classroomID\n            }),\n        });\n\n        if (!response.ok) {\n            throw new Error('请求失败');\n        }\n        return response.json();\n    }\n    return false;\n}\n\n/*\ninput:\n  classroomID: 教室id\nuserAccount: <string>\n\nreturn: <bool>\n*/\n\nexport async function addSave(classroomID) { // 添加收藏\n    // alert(`[api/save/addSave]\\nclassroomID = ${classroomID}`); // debug\n    const account = localStorage.getItem('loggedInAccount');\n    await fetch('https://qiuye.mooo.com/api/app/addSave', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n            userAccount: account,\n            classroomID: classroomID,\n        }),\n    });\n}\n/*\ninput:\n  classroomID: 教室id\nuserAccount: <string>\n*/\n\nexport async function removeSave(classroomID) { // 移除收藏\n    const account = localStorage.getItem('loggedInAccount');\n    await fetch('https://qiuye.mooo.com/api/app/romoveSave', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n            userAccount: account,\n            classroomID: classroomID,\n        }),\n    });\n}\n/*\ninput:\n  classroomID: 教室id\nuserAccount: <string>\n*/\n\nexport async function getAllSave() { // user的全部收藏\n\n    const account = localStorage.getItem('loggedInAccount');\n    const response = await fetch('https://qiuye.mooo.com/api/app/getAllSave', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ userAccount: account }),\n    });\n\n    if (!response.ok) {\n        throw new Error('请求失败');\n    }\n\n    const data = await response.json();\n\n    const arr = [];\n\n    // 遍歷 data 中的每個屬性\n    for (const key in data) {\n        // 檢查屬性值是否為 true\n        if (data[key] === true) {\n            // 如果是 true，將該鍵添加到 arr 中\n            arr.push(key);\n        }\n    }\n    console.log(arr);\n    return arr;\n\n\n}\n/*\nuserAccount: <string>\n\nreturn: <array>\n*/","import classroomInfo from \"@/assets/classroom-info.json\"; // 教室資訊\n\nexport function getClassroomInfo(classroomID){ // 獲得教室資料\n  const classroom_default = { building: \"未知的大樓\", name: \"未知\", number: \"-\", equipment: \"-\" };\n  let classroom = classroom_default;\n  if (classroomID in classroomInfo) classroom = classroomInfo[classroomID];\n  classroom.id = classroomID;\n  return { ...classroom }; // copy\n}\n/*\n  為什麼要多寫一個function是因為要處理沒有資料的教室\n  如果是需要拿到\"有資料\"的全部教室代號,會直接在vue檔內 import \"classroom-info.json\"\n*/","<template>\n  <span class=\"ts-icon is-star-icon\" :class=\"isSave?'saveButton-saved':'saveButton'\" @click=\"clickSaveButton\"></span>\n</template>\n\n<script>\n  import allClassroomInfo from \"@/assets/classroom-info.json\"; // 全部的教室資訊\n  import { getIsSave, addSave, removeSave } from '@/api/save';\n\n  export default{\n    props: [\n      \"classroomID\"\n    ],\n    data(){\n      return {\n        isSave: false // cilent端的\"教室是否被收藏\"\n      }\n    },\n    async created(){\n      this.isSave = await getIsSave(this.classroomID); // 頁面載入時,更新cilent端的\"教室是否被收藏\"\n    },\n    methods: {\n      async clickSaveButton(){ // 更新user的\"教室是否被收藏\"\n        if (!(this.classroomID in allClassroomInfo)) return; // 如果教室資料不存在,無法更新\n        \n        this.isSave = !this.isSave;\n        if (this.isSave) await addSave(this.classroomID);\n        else await removeSave(this.classroomID);\n        this.isSave = await getIsSave(this.classroomID);\n      }\n    },\n    watch: {\n      async classroomID(){ // 教室id改變時,更新cilent端的\"教室是否被收藏\"\n        this.isSave = await getIsSave(this.classroomID);\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .saveButton{\n    margin: -5.5px 0 0 6px;\n    border: none;\n    color: #fff; font-size: 20px;\n    -webkit-text-stroke: 1px #666;\n  }\n  .saveButton-saved{\n    margin: -5.5px 0 0 6px;\n    border: none;\n    color: #f80; font-size: 20px;\n    -webkit-text-stroke: 1px;\n  }\n</style>\n<style>\n  .saveButton-tdFix{ /* bad solution */\n    padding-bottom: 0 !important;\n    display: flex;\n  }\n</style>","import { render } from \"./SaveButton.vue?vue&type=template&id=36c0f576&scoped=true\"\nimport script from \"./SaveButton.vue?vue&type=script&lang=js\"\nexport * from \"./SaveButton.vue?vue&type=script&lang=js\"\n\nimport \"./SaveButton.vue?vue&type=style&index=0&id=36c0f576&scoped=true&lang=css\"\nimport \"./SaveButton.vue?vue&type=style&index=1&id=36c0f576&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-36c0f576\"]])\n\nexport default __exports__"],"names":["async","getUserPeriodData","account","localStorage","getItem","response","fetch","method","headers","credentials","body","JSON","stringify","userAccount","ok","Error","data","json","dataArray","Object","values","updatedData","Promise","all","map","start","item","period","startPeriod","end","endPeriod","daystart","Date","dateend","newPeriod","getDay","getHours","console","log","error","getAllUserPeriodData","getEnablePeriodData","classroomID","setEnablePeriod","enablePeriod","apiUrl","status","getAllEnablePeriodData","convertToTimeString","day","baseDate","setHours","currentDayOfWeek","daysUntilMonday","currentMonday","setDate","getDate","startDateTime","endDateTime","toJSON","sendApply","selectedPeriod","result","code","cancelApply","pid","message","deletePeriodData","LendKey","ReceiveKey","acceptRequest","rejectRequest","getAllUserPoint","getUserPoint","setUserPoint","point","setUserBanState","state","getIsSave","toString","addSave","removeSave","getAllSave","arr","key","push","getClassroomInfo","classroom_default","building","name","number","equipment","classroom","classroomInfo","id","_createElementBlock","class","_normalizeClass","$data","isSave","onClick","_cache","args","$options","clickSaveButton","props","created","this","methods","allClassroomInfo","watch","__exports__","render"],"sourceRoot":""}